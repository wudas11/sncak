void swp(char* p1, char* p2, int nub) {
	int i = 0;
	for (i = 0; i < nub; i++) {
		char tmp = *p2;
		*p2 = *p1;
		*p1 =tmp;
		p1++;
		p2++;
	}
}

void my_qsort(void* base,int sz,int nub, int (*cmp)(const void* e1, const void* e2))
//void* base:因为不知道要排序的数据类型所以使用void*.
//int sz:要排序数据的大小
//int nub:排序数据单个元素的大小
//int (*cmp)(const void* e1,const void* e2):数据对比的方法，const固定注数据
{
	int i = 0;
	//趟数
	for (i = 0; i < sz - 1; i++) {
		//
		int j = 0;
		for (j = 0; j < sz - 1 - i; j++) {
			if (cmp((char*)base + j * nub, (char*)base + (j + 1) * nub) > 0)
				//比较大小
			{
				swp((char*)base + j * nub, (char*)base + (j + 1) * nub, nub);
				//交换
			
			}
		}
	}
}
int bj(const void* e1, const void* e2) {
	return *(int*)e1 - *(int*)e2;
}
void print(int arr[], int sz) {
	int i;
	for (i = 0; i < sz; i++) {
		printf("%d\t", arr[i]);
	}
}
void test() {
	int arr[10] = { 1,3,5,7,9,2,4,6,8,0 };
	int sz = sizeof(arr) / sizeof(arr[0]);
	my_qsort(arr, sz, sizeof(arr[0]), bj);
	print(arr,sz);
}
int main()
{
	test();
}
